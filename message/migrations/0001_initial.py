# Generated by Django 4.1 on 2024-05-04 21:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Block",
            fields=[
                ("bid", models.AutoField(primary_key=True, serialize=False)),
                ("block_name", models.CharField(blank=True, max_length=100, null=True)),
                ("center_latitude", models.FloatField(blank=True, null=True)),
                ("center_longitude", models.FloatField(blank=True, null=True)),
                ("radius", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "block",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Hood",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("hood_name", models.CharField(blank=True, max_length=100, null=True)),
                ("center_latitude", models.FloatField(blank=True, null=True)),
                ("center_longitude", models.FloatField(blank=True, null=True)),
                ("radius", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "hood",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserFollowBlock",
            fields=[
                ("auto_id", models.AutoField(primary_key=True, serialize=False)),
                ("date_followed", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": "user_follow_block",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserInBlock",
            fields=[
                ("auto_id", models.AutoField(primary_key=True, serialize=False)),
                ("date_joined", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": "user_in_block",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UsersCustomuser",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
                ("bio", models.TextField(blank=True, null=True)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("image_url", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "users_customuser",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                ("mid", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("text", models.CharField(blank=True, max_length=200, null=True)),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "author_id",
                    models.ForeignKey(
                        blank=True,
                        db_column="author_id",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="message.userscustomuser",
                    ),
                ),
                (
                    "reply_to_mid",
                    models.ForeignKey(
                        blank=True,
                        db_column="reply_to_mid",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="message.message",
                    ),
                ),
            ],
            options={
                "db_table": "message",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Thread",
            fields=[
                ("tid", models.AutoField(primary_key=True, serialize=False)),
                ("topic", models.CharField(blank=True, max_length=100, null=True)),
                ("subject", models.CharField(blank=True, max_length=100, null=True)),
                ("visibility", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "author_id",
                    models.ForeignKey(
                        blank=True,
                        db_column="author_id",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="message.userscustomuser",
                    ),
                ),
            ],
            options={
                "db_table": "thread",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("auto_id", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "mid",
                    models.ForeignKey(
                        blank=True,
                        db_column="mid",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="message.message",
                    ),
                ),
                (
                    "uid",
                    models.ForeignKey(
                        blank=True,
                        db_column="uid",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="message.userscustomuser",
                    ),
                ),
            ],
            options={
                "db_table": "review",
                "managed": True,
            },
        ),
        migrations.AddField(
            model_name="message",
            name="tid",
            field=models.ForeignKey(
                blank=True,
                db_column="tid",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="message.thread",
            ),
        ),
        migrations.CreateModel(
            name="Threadvisibletouser",
            fields=[
                (
                    "tid",
                    models.OneToOneField(
                        db_column="tid",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="message.thread",
                    ),
                ),
                (
                    "uid",
                    models.ForeignKey(
                        blank=True,
                        db_column="uid",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="message.userscustomuser",
                    ),
                ),
            ],
            options={
                "db_table": "threadvisibletouser",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Threadvisibletohood",
            fields=[
                (
                    "tid",
                    models.OneToOneField(
                        db_column="tid",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="message.thread",
                    ),
                ),
                (
                    "hid",
                    models.ForeignKey(
                        blank=True,
                        db_column="hid",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="message.hood",
                    ),
                ),
            ],
            options={
                "db_table": "threadvisibletohood",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Threadvisibletoblock",
            fields=[
                (
                    "tid",
                    models.OneToOneField(
                        db_column="tid",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="message.thread",
                    ),
                ),
                (
                    "bid",
                    models.ForeignKey(
                        blank=True,
                        db_column="bid",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="message.block",
                    ),
                ),
            ],
            options={
                "db_table": "threadvisibletoblock",
                "managed": True,
            },
        ),
    ]
